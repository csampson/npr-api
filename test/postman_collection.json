{
	"variables": [],
	"info": {
		"name": "publicbroadcasting.io",
		"_postman_id": "e551d878-132c-d245-9a3e-0afcb4d6f7f7",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "All stations",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "const payload = JSON.parse(responseBody);\n\nconst schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"abbreviation\": {\n        \"type\": \"string\"\n      },\n      \"address\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"area_code\": {\n        \"type\": \"null\"\n      },\n      \"band\": {\n        \"type\": \"string\"\n      },\n      \"call\": {\n        \"type\": \"string\"\n      },\n      \"donation_url\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"fax\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"format\": {\n        \"type\": \"string\"\n      },\n      \"frequency\": {\n        \"type\": \"number\"\n      },\n      \"geolocation\": {\n        \"type\": [\"object\", \"null\"],\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"homepage\": {\n        \"type\": \"string\"\n      },\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"logo\": {\n        \"type\": \"string\"\n      },\n      \"market_city\": {\n        \"type\": \"string\"\n      },\n      \"market_state\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"phone\": {\n        \"type\": \"string\"\n      },\n      \"phone_extension\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"status\": {\n        \"type\": \"string\"\n      },\n      \"stream_url\": {\n        \"type\": [\"string\",\"null\"]\n      },\n      \"tagline\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n};\n\ntests['Status code is 200'] = responseCode.code === 200;\ntests['Content is UTF-8 JSON'] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\ntests['Payload is a set of station objects'] = tv4.validate(payload, schema);\n"
					}
				}
			],
			"request": {
				"url": "{{pbi_endpoint}}/stations",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SurveyName\": \"Test\",\n    \"ClientSurveyLiveURL\": \"http://example.com\",\n    \"TestRedirectURL\": \"http://example.com\",\n    \"CountryLanguageID\": 9\n}"
				},
				"description": "Fetch a collection of all station records"
			},
			"response": []
		},
		{
			"name": "With pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "const payload = JSON.parse(responseBody);\n\nconst schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"abbreviation\": {\n        \"type\": \"string\"\n      },\n      \"address\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"area_code\": {\n        \"type\": \"null\"\n      },\n      \"band\": {\n        \"type\": \"string\"\n      },\n      \"call\": {\n        \"type\": \"string\"\n      },\n      \"donation_url\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"fax\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"format\": {\n        \"type\": \"string\"\n      },\n      \"frequency\": {\n        \"type\": \"number\"\n      },\n      \"geolocation\": {\n        \"type\": [\"object\", \"null\"],\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"homepage\": {\n        \"type\": \"string\"\n      },\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"logo\": {\n        \"type\": \"string\"\n      },\n      \"market_city\": {\n        \"type\": \"string\"\n      },\n      \"market_state\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"phone\": {\n        \"type\": \"string\"\n      },\n      \"phone_extension\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"status\": {\n        \"type\": \"string\"\n      },\n      \"stream_url\": {\n        \"type\": [\"string\",\"null\"]\n      },\n      \"tagline\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n};\n\nconst endpoint = postman.getEnvironmentVariable('pbi_endpoint');\n\ntests['Status code is 200'] = responseCode.code === 200;\ntests['Content is UTF-8 JSON'] = postman.getResponseHeader('Content-Type') === 'application/json; charset=utf-8';\ntests['Payload is a set of station objects'] = tv4.validate(payload, schema);\ntests['Links header contains pagination links'] = postman.getResponseHeader('Links') === \n`<${endpoint}/stations?page=3>; rel=\"next\", <${endpoint}/stations?page=29>; rel=\"last\", <${endpoint}/stations?page=1>; rel=\"prev\"`;\n"
					}
				}
			],
			"request": {
				"url": "{{pbi_endpoint}}/stations?page=2",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SurveyName\": \"Test\",\n    \"ClientSurveyLiveURL\": \"http://example.com\",\n    \"TestRedirectURL\": \"http://example.com\",\n    \"CountryLanguageID\": 9\n}"
				},
				"description": "Fetch the second page of a collection of all station records"
			},
			"response": []
		},
		{
			"name": "With sorting",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "const payload = JSON.parse(responseBody);\n\nconst schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"abbreviation\": {\n        \"type\": \"string\"\n      },\n      \"address\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"area_code\": {\n        \"type\": \"null\"\n      },\n      \"band\": {\n        \"type\": \"string\"\n      },\n      \"call\": {\n        \"type\": \"string\"\n      },\n      \"donation_url\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"fax\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"format\": {\n        \"type\": \"string\"\n      },\n      \"frequency\": {\n        \"type\": \"number\"\n      },\n      \"geolocation\": {\n        \"type\": [\"object\", \"null\"],\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"homepage\": {\n        \"type\": \"string\"\n      },\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"logo\": {\n        \"type\": \"string\"\n      },\n      \"market_city\": {\n        \"type\": \"string\"\n      },\n      \"market_state\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"phone\": {\n        \"type\": \"string\"\n      },\n      \"phone_extension\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"status\": {\n        \"type\": \"string\"\n      },\n      \"stream_url\": {\n        \"type\": [\"string\",\"null\"]\n      },\n      \"tagline\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n};\n\ntests['Status code is 200'] = responseCode.code === 200;\ntests['Content is UTF-8 JSON'] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\ntests['Payload is a set of station objects'] = tv4.validate(payload, schema);\n"
					}
				}
			],
			"request": {
				"url": "{{pbi_endpoint}}/stations?sort=title",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SurveyName\": \"Test\",\n    \"ClientSurveyLiveURL\": \"http://example.com\",\n    \"TestRedirectURL\": \"http://example.com\",\n    \"CountryLanguageID\": 9\n}"
				},
				"description": "Fetch all stations in alphabetical order of their `title`"
			},
			"response": []
		},
		{
			"name": "With basic filtering",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "const payload = JSON.parse(responseBody);\n\nconst schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"abbreviation\": {\n        \"type\": \"string\"\n      },\n      \"address\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"area_code\": {\n        \"type\": \"null\"\n      },\n      \"band\": {\n        \"type\": \"string\"\n      },\n      \"call\": {\n        \"type\": \"string\"\n      },\n      \"donation_url\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"fax\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"format\": {\n        \"type\": \"string\"\n      },\n      \"frequency\": {\n        \"type\": \"number\"\n      },\n      \"geolocation\": {\n        \"type\": [\"object\", \"null\"],\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"homepage\": {\n        \"type\": \"string\"\n      },\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"logo\": {\n        \"type\": \"string\"\n      },\n      \"market_city\": {\n        \"type\": \"string\"\n      },\n      \"market_state\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"phone\": {\n        \"type\": \"string\"\n      },\n      \"phone_extension\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"status\": {\n        \"type\": \"string\"\n      },\n      \"stream_url\": {\n        \"type\": [\"string\",\"null\"]\n      },\n      \"tagline\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n};\n\ntests['Status code is 200'] = responseCode.code === 200;\ntests['Content is UTF-8 JSON'] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\ntests['Payload is a set of station objects'] = tv4.validate(payload, schema);\n"
					}
				}
			],
			"request": {
				"url": "{{pbi_endpoint}}/stations?filter={\"market_state\": \"LA\"}",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SurveyName\": \"Test\",\n    \"ClientSurveyLiveURL\": \"http://example.com\",\n    \"TestRedirectURL\": \"http://example.com\",\n    \"CountryLanguageID\": 9\n}"
				},
				"description": "Fetch all stations in Louisiana"
			},
			"response": []
		},
		{
			"name": "With compound condition filtering",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "const payload = JSON.parse(responseBody);\n\nconst schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"abbreviation\": {\n        \"type\": \"string\"\n      },\n      \"address\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"area_code\": {\n        \"type\": \"null\"\n      },\n      \"band\": {\n        \"type\": \"string\"\n      },\n      \"call\": {\n        \"type\": \"string\"\n      },\n      \"donation_url\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"fax\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"format\": {\n        \"type\": \"string\"\n      },\n      \"frequency\": {\n        \"type\": \"number\"\n      },\n      \"geolocation\": {\n        \"type\": [\"object\", \"null\"],\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"homepage\": {\n        \"type\": \"string\"\n      },\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"logo\": {\n        \"type\": \"string\"\n      },\n      \"market_city\": {\n        \"type\": \"string\"\n      },\n      \"market_state\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"phone\": {\n        \"type\": \"string\"\n      },\n      \"phone_extension\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"status\": {\n        \"type\": \"string\"\n      },\n      \"stream_url\": {\n        \"type\": [\"string\",\"null\"]\n      },\n      \"tagline\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n};\n\ntests['Status code is 200'] = responseCode.code === 200;\ntests['Content is UTF-8 JSON'] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\ntests['Payload is a set of station objects'] = tv4.validate(payload, schema);\n"
					}
				}
			],
			"request": {
				"url": "{{pbi_endpoint}}/stations?filter={\"market_state\": \"AK\", \"band\": \"AM\"}",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SurveyName\": \"Test\",\n    \"ClientSurveyLiveURL\": \"http://example.com\",\n    \"TestRedirectURL\": \"http://example.com\",\n    \"CountryLanguageID\": 9\n}"
				},
				"description": "Fetch all stations in Alaska with a band matching \"AM\""
			},
			"response": []
		},
		{
			"name": "With geolocation filtering",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "const payload = JSON.parse(responseBody);\n\nconst schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"abbreviation\": {\n        \"type\": \"string\"\n      },\n      \"address\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"area_code\": {\n        \"type\": \"null\"\n      },\n      \"band\": {\n        \"type\": \"string\"\n      },\n      \"call\": {\n        \"type\": \"string\"\n      },\n      \"donation_url\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"fax\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"format\": {\n        \"type\": \"string\"\n      },\n      \"frequency\": {\n        \"type\": \"number\"\n      },\n      \"geolocation\": {\n        \"type\": [\"object\", \"null\"],\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"homepage\": {\n        \"type\": \"string\"\n      },\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"logo\": {\n        \"type\": \"string\"\n      },\n      \"market_city\": {\n        \"type\": \"string\"\n      },\n      \"market_state\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"phone\": {\n        \"type\": \"string\"\n      },\n      \"phone_extension\": {\n        \"type\": [\"string\", \"null\"]\n      },\n      \"status\": {\n        \"type\": \"string\"\n      },\n      \"stream_url\": {\n        \"type\": [\"string\",\"null\"]\n      },\n      \"tagline\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n};\n\ntests['Status code is 200'] = responseCode.code === 200;\ntests['Content is UTF-8 JSON'] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\ntests['Payload is a set of station objects'] = tv4.validate(payload, schema);\n"
					}
				}
			],
			"request": {
				"url": "{{pbi_endpoint}}/stations?filter={ \"geolocation\": [29.9511,-90.0715] }",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SurveyName\": \"Test\",\n    \"ClientSurveyLiveURL\": \"http://example.com\",\n    \"TestRedirectURL\": \"http://example.com\",\n    \"CountryLanguageID\": 9\n}"
				},
				"description": "Fetch all stations near New Orleans, LA"
			},
			"response": []
		}
	]
}